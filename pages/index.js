import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import Alert from '../components/Alert';
import List from '../components/List';
import styles from '../styles/Home.module.css';
import Cookies from 'js-cookie';

const getLocalStorage = () => {
      let list = Cookies.get('list')
      if (list) {
        return (list = JSON.parse(Cookies.get('list')));
      } else {
        return [];
      }
    }

 const Home = (props) => {
  const [name, setName] = useState('');
  const [list, setList] = useState(getLocalStorage());
  const [isEditing, setIsEditing] = useState(false);
  const [editID, setEditID] = useState(null);
  const [alert, setAlert] = useState({show: false, msg: '', type: ''});

  const handleSubmit = (e) => {
    e.preventDefault()
    if(!name){
      showAlert(true, 'please enter value', 'danger');
    }else if(name && isEditing){
      setList(
        list.map(item => {
          if(item.id === editID){
            return{...item, title: name}
          }
          return item
        })
      )
      setName('');
      setEditID(null);
      setIsEditing(false);
      showAlert(true, 'value changed', 'success');
    }else{
      showAlert(true, 'item added to the list', 'success');
      const newItem = {id: new Date().getTime().toString(), title: name};
      setList([...list, newItem]);
      setName('');
      
    }
  }

  const showAlert = (show=false, msg='', type='') => {
    setAlert({show, msg, type});
  }

  const clearList = () => {
    showAlert(true, 'empty list', 'danger', );
    setList([])
  }

  const removeItem = id => {
    showAlert(true, 'item remove', 'danger');
    setList(list.filter(item => item.id !== id));
  }

  const editItem = id => {
    const specificItem = list.find(item => item.id === id);
    setIsEditing(true);
    setEditID(id);
    setName(specificItem.title);
  }

  useEffect(() => {
    // localStorage.setItem('list', JSON.stringify(list));
    Cookies.set('list', JSON.stringify(list));
  }, [list]);
  

  return (
    <div className={styles.container}>
      <Head>
        <title>Grocery Bud</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className='section-center'>
        <form className='grocery-form' onSubmit={handleSubmit}>
          {
            alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />
          }
          <h3>Grocery Bud</h3>
          <div className='form-control'>
            <input type="text" className='grocery' placeholder='e.g. eggs' value={name} onChange={(e) => setName(e.target.value)}  />
            <button type='submit' className='submit-btn'>
              {isEditing ? 'Edit' : 'Submit'}
            </button>
          </div>
        </form>
        {
          list.length > 0 && <div className='grocery-container'>
          <List items={list} removeItem={removeItem} editItem={editItem} />
          <button className='clear-btn' onClick={clearList}>
            clear Items
          </button>
        </div>
        }
        
      </section>
    </div>
  )
}

// export async function getStaticProps(){
//   const getLocalStorage = () => {
//     let list = localStorage.getItem('list');
//     if (list) {
//       return (list = JSON.parse(localStorage.getItem('list')));
//     } else {
//       return [];
//     }
//   }

//   return{
//     props:{
//       getLocalStorage: getLocalStorage()
//     }
//   }
// }

export default Home;
